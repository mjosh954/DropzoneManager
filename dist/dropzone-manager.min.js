var DropzoneManager=function(){"use strict";function e(r){return this instanceof e?(this.self=this,this.dropzones={},void(r&&r.forEach(function(e){this.self.register(e)}))):new e(r)}function r(){}function o(e){return e instanceof Dropzone}function n(e,r){return"undefined"!==e[r]&&o(e[r])}return e.prototype.register=function(e,n,t){return o(e)?(t||"function"!=typeof n||(t=n,n={}),r(e),this.dropzones[e.options.id]=e,t&&"function"==typeof t?t(null,e):void 0):t(new Error("Not a valid dropzone to register"))},e.prototype.processAll=function(e,r){if(r||"function"!=typeof e||(r=e,e={},e.order="ASC"),!this.hasRegisteredDropzones())return r(new Error("Manager has no dropzones registered"));var o=Object.keys(this.dropzones),t=[];return o.forEach(function(e){n(e)&&this.processById(e,function(e,r){e||t.push(r)})}),r&&"function"==typeof r?r(null,t):void 0},e.prototype.processById=function(e,r){if(!this.hasRegisteredDropzones())return r(new Error("Manager has no dropzones registered"));if(!n(this.dropzones,e))return r(new Error('"'+e+'" is not a registered Dropzone'));var o=this.dropzones[e];return o.processQueue(),r&&"function"==typeof r?r(null,o):o},e.prototype.removeById=function(e,r){if(!this.hasRegisteredDropzones())return r(new Error("Manager has no dropzones registered"),null);if(n(this.dropzones,e))return r(new Error('"'+e+'" is not a registered Dropzone'));var o=this.dropzones[e];return delete this.dropzones[e],r&&"function"==typeof r?r(null,o):o},e.prototype.unregisterAll=function(e){if(!this.hasRegisteredDropzones())return e(new Error("Manager has no dropzones registered."));var r=JSON.parse(JSON.stringify(this.dropzones));return this.dropzones={},e&&"function"==typeof e?e(null,r):r},e.prototype.hasAnyQueuedFiles=function(){var e=!1;if(this.hasRegisteredDropzones()){var r=Object.keys(this.dropzones);r.forEach(function(r){n(r)&&this.dropzones[r].files.forEach(function(r){return"queued"===r.status?void(e=!0):void 0}),e})}return e},e.prototype.hasRegisteredDropzones=function(){return Object.keys(this.dropzones).length>0},e.createDropzone=function(e,r){var o=new Dropzone(e,r);return o},e}();
//# sourceMappingURL=data:application/json;base64,