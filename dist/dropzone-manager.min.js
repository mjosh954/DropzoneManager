var DropzoneManager=function(){"use strict";function e(r){return this instanceof e?(this.self=this,this.dropzones={},void(r&&r.length>0&&r.forEach(function(e){this.self.register(e)}))):new e(r)}function r(e){e.isRegistered=!0}function n(e){return e instanceof Dropzone}function o(e,r){return"undefined"!==e[r]&&n(e[r])}return e.prototype.register=function(e,o){return o&&"function"===o||(o=function(){}),n(e)?(r(e),this.dropzones[e.options.id]=e,o(null,e)):o(new Error("Not a valid dropzone to register"))},e.prototype.processAll=function(e,r){if(r||"function"!=typeof e||(r=e,e={order:"ASC",unregister:!1}),!this.hasRegisteredDropzones())return r(new Error("Manager has no dropzones registered"));var n=Object.keys(this.dropzones),t=[];return n.forEach(function(r){o(r)&&this.processById(r,function(n,o){n||t.push(o),e.unregister&&this.removeById({id:r})})}),r(null,t)},e.prototype.processById=function(e,r){if(r&&"function"==typeof r||(r=function(){}),!this.hasRegisteredDropzones())return r(new Error("Manager has no dropzones registered"));if(!o(this.dropzones,e.id))return r(new Error('"'+e.id+'" is not a registered Dropzone'));var n=this.dropzones[e.id];return n.processQueue(),e.postUnregister&&(this.dropzones[e.id].isRegistered=!1),r(null,n)},e.prototype.removeById=function(e,r){if(r&&"function"==typeof r||(r=function(){}),!this.hasRegisteredDropzones())return r(new Error("Manager has no dropzones registered"),null);if(o(this.dropzones,e.id))return r(new Error('"'+e.id+'" is not a registered Dropzone'));var n=this.dropzones[e.id];return e.retainInstance===!0?this.dropzpones[e.id].isRegistered=!1:delete this.dropzones[e.id],r(null,n)},e.prototype.unregisterAll=function(e,r){if(r||"function"!=typeof e||(r=e,e={retainInstance:!1}),!this.hasRegisteredDropzones())return r(new Error("Manager has no dropzones registered."));var n=JSON.parse(JSON.stringify(this.dropzones));if(e.retainDropzones&&e.retainInstance===!1)this.dropzones={};else{var t=Object.keys(this.dropzones),s=[];t.forEach(function(e){if(o(e)){var r=this.dropzones[e].isRegistered=!1;s.push(r)}})}return r(null,n)},e.prototype.hasAnyQueuedFiles=function(){var e=!1;if(this.hasRegisteredDropzones()){var r=Object.keys(this.dropzones);r.forEach(function(r){o(r)&&this.dropzones[r].files.forEach(function(r){return"queued"===r.status?void(e=!0):void 0}),e})}return e},e.prototype.hasRegisteredDropzones=function(){var e=Object.keys(this.dropzones);return 0===e.length?!1:(e.forEach(function(e){var r=this.dropzones[e];return r.isRegistered?!0:void 0}),!1)},e.createDropzone=function(e,r){var n=new Dropzone(e,r);return n},e}();
//# sourceMappingURL=data:application/json;base64,